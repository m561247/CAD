#
#
aof2201 ao22 4 6 38 30 140000 9240 6822 9240 9240 ; O A1 B1 C2 D2 *
aof2301 ao33 6 6 41 35 140000 8580 4623 8580 8580 8580 8580 ; O A1 B1 C1 D2 E2 F2 *
aof3201 ao222 4 6 38 30 1400009240 6822 9240 9240 9240 9240 ; O A1 B1 C2 D2 E3 F3 *
aof4201 ao2222 4 7 51 38 14000010120 5723 9900 9900 10120 10120 10340 10340 ; O A1 B1 C2 D2 E3 F3 G4 H4 *
aoif2201 aoi22 4 5 72 59 140000 8800 2644 8800 8800 ; O A1 B1 C2 D2 *
blf00001 aoi21 3 3 80 84 140000 7260 5942 8360 ; O A1 B2 C2 *
blf00101 oai21 3 3 48 60 140000 9900 6822 9240 ; O A1 B2 C2 *
buff100 himpbuf 4 4 29 26 140000 4840 ; O A1 *
buff101 buffer 3 3 35 35 140000 6820 ; O A1 *
buff121 tristatebuf 1 1 45 21 140000 11440 11450 ; O DATA1 EN2 *
delf011 delaycell ; O A1 *
dfbf311 dffsetreset 7 7 36 30 140000 9 8 82 86 140000 10780 5283 11880 11440 ; Q Q_b DATA1 CLK2 RST3 SET4 *
dfnf311 dff 8 9 128 110 140000 8 7 73 90 140000 9240 6823 ; Q Q_b DATA1 CLK2 *
dfrf301 dffasycreset 8 8 35 38 140000 9900 6382 9460 ; Q DATA1 CLK2 RST3 *
dfrf311 dffreset 8 8 35 38 140000 9 9 84 86 140000 9900 6382 9460 ; Q Q_b DATA1 CLK2 RST3 *
faf001 fulladder 5 5 16 16 140000 8 7 45 34 140000 39380 24430 29260 ; SUM CO A1 B1 CIN2 *
invf100 himpinv 1 1 107 106 140000 1540 ; O A1 *
invf101 inv 1 1 58 61 140000 8360 ; O A1 *
invf103 threexinvbuf 1 1 0 0 0 0 ; O A1 *
invf104 fourxinvbuf 1 1 20 20  140000 36080 ; O A1 *
invf201 twoinvert 1 1 56 52 140000 0 0 26 24 140000 9240 ; O1 O2 A1 B2 *
labf111 crosscoupnandlatch 3 1 46 50 140000 3 3 44 90 140000 10780 6383 ; Q Q_b RST1 SET2 *
labf211 crosscoupnorlatch 4 2 106 49 140000 3 2 60 53 140000 10780 8142 ; Q Q_b RST1 SET2 *
larf310 clocklatch 10 10 86 70 140000 9 9 38 32 0 140000 5500 3521 ; Q Q_b DATA1 CLK2 RST3 *
muxf201 twoinpmux 3 5 50 43 140000 6600 4402 14080 ; O A1 B2 SEL3 *
nanf201 nand2 2 3 50 51 140000 10780 6823 ; O A1 B1 *
nanf211 and2nand2 3 3 53 53 1400000 4 3 117 122 140000 8800 3524 ; O1 O2 A1 B1 *
nanf251 nimp 4 4 49 50 140000 5500 5063 ; O A1 B2 *
nanf301 nand3 3 4 40 50 140000 12100 6604 12100 ; O A1 B1 C1 *
nanf311 and3nand3 4 4 50 51 140000 5 5 117 101 140000 9900 4843 9900 ; O1 O2 A1 B1 C1 *
nanf401 nand4 4 4 50 58 140000 10120 4844 10120 10120 ; O A1 B1 C1 D1 *
nanf411 and4nand4 6 4 56 57 140000 5 6 128 104 140000 9240 3744 9240 9240 ; O1 O2 A1 B1 C1 D1 *
norf201 nor2 3 3 69 66 140000 8360 6821 ; O A1 B1 *
norf211 or2nor2 4 4 71 64 140000 4 4 123 121 140000 8140 6601 ; O1 O2 A1 B1 *
norf251 imp 2 2 94 71 140000 6160 5061 ; O A1 B2 *
norf301 nor3 4 4 95 79 140000 8140 6821 8140 ; O A1 B1 C1 *
norf311 or3nor3 7 6 92 80 140000 8 7 152 144 140000 7480 6381 7480 ; O1 O2 A1 B1 C1 *
norf401 nor4 5 6 121 100 140000 7700 6821 7700 7700 ; O A1 B1 C1 D1 *
oaif2201 oai22 4 5 76 62 140000 7700 5721 8800 8800 ; O A1 B1 C2 D2 *
orf401 or4 4 8 72 53 140000 9020 6822 9020 9020 ; O A1 B1 C1 D1 *
pudf000 pulldown ; O *
puuf000 pullup ; O *
swcf020 transgate 0 0 7 9 140000 24200 4623 ; O DATA1 CTL2 *
xnof201 nxor2 4 4 47 37 140000 11440 5723 ; O A1 B1 *
xnsf201 statnxor2 4 4 47 37 140000 11440 5723 ; O A1 B1 *
xorf201 xor2 5 3 56 57 140000 9460 6823 ; O A1 B1 *
xosf201 statxor2 5 3 56 57 140000 9460 6823 ; O A1 B1 *
#
# pads  NOTE:  no timing information is associated with the pads, yet..
v4out   v4out  ; pad out *
v4outm  v4outm ; pad out *
v4in    v4in   ; in inb pad *
v4inm   v4inm  ; in inb pad *
v4io    v4io   ; pad in out enable *
v4iom   v4iom  ; pad in out enable *

