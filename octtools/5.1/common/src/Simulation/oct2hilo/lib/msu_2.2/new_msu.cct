****{

CCT (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3,ic4) ao22(O,A1,B1,C2,D2) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C2);
capacitor(ic4) cap4(D2);
capacitor(oc1) cap5(O);

** WIRE DECLARATIONS

INPUT   A1 B1 C2 D2;

WIRE    (rise,fall,mrise,mfall,0) O = (A1 AND B1) OR (C2 AND D2);
.
****}
****{

CCT (rise,fall,mrise,mfall,tcap,oc1,ic1,ic2,ic3,ic4,ic5,ic6) ao33(O,A1,B1,C1,D2,E2,F2) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C1);
capacitor(ic4) cap4(D2);
capacitor(ic5) cap5(E2);
capacitor(ic6) cap6(F2);
capacitor(oc1) cap7(O);

** WIRE DECLARATIONS

INPUT   A1 B1 C1 D2 E2 F2;

WIRE    (rise,fall,mrise,mfall,0) O = (A1 AND B1 AND C1) OR (D2 AND E2 AND F2);
.
****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3,ic4,ic5,ic6) ao222(O,A1,B1,C2,D2,E3,F3)    
                        
capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C2);
capacitor(ic4) cap4(D2);
capacitor(ic5) cap5(E3);
capacitor(ic6) cap6(F3);
capacitor(oc1) cap7(O);

** WIRE DECLARATIONS

INPUT           A1 B1 C2 D2 E3 F3;

WIRE    (rise,fall,mrise,mfall,0) O = (A1 AND B1) OR (C2 AND D2) OR (E3 AND F3);
.

****}
****{

CCT (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3,ic4,ic5,ic6,ic7,ic8) ao2222(O,A1,B1,C2,D2,E3,F3,G4,H4) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C2);
capacitor(ic4) cap4(D2);
capacitor(ic5) cap5(E3);
capacitor(ic6) cap6(F3);
capacitor(ic7) cap7(G4);
capacitor(ic8) cap8(H4);
capacitor(oc1) cap9(O);

** WIRE DECLARATIONS

INPUT   A1 B1 C2 D2 E3 F3 G4 H4;

WIRE    (rise,fall,mrise,mfall,0) O = (A1 AND B1) OR (C2 AND D2) OR (E3 AND F3) OR (G4 AND H4);
.
****}
****{

 
 
CCT (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3,ic4) aoi22(O,A1,B1,C2,D2) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C2);
capacitor(ic4) cap4(D2);
capacitor(oc1) cap5(O);

** WIRE DECLARATIONS

INPUT   A1 B1 C2 D2;

WIRE    (rise,fall,mrise,mfall,0) O = (A1 AND B1) NOR (C2 AND D2);
.
****}
****{

CCT (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3) aoi21(O,A1,B2,C2) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B2);
capacitor(ic3) cap3(C2);
capacitor(oc1) cap4(O);

** WIRE DECLARATIONS

INPUT   A1 B2 C2;

WIRE    (rise,fall,mrise,mfall,0) O = (B2 AND C2) NOR A1;
.
****}
****{

CCT (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3) oai21(O,A1,B2,C2) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B2);
capacitor(ic3) cap3(C2);
capacitor(oc1) cap4(O);

** WIRE DECLARATIONS

INPUT   A1 B2 C2;

WIRE    (rise,fall,mrise,mfall,0) O = (B2 OR C2) NAND A1;
.
****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1) himpbuf(O,A1)           

capacitor(ic1) cap1(A1);
capacitor(oc1) cap2(O);
                                
** WIRE DECLARATIONS

INPUT           A1;
WIRE            (rise,fall,mrise,mfall,0) O = A1.

****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1) buffer(O,A1)           

capacitor(ic1) cap1(A1);
capacitor(oc1) cap2(O);

** WIRE DECLARATIONS

INPUT           A1;
WIRE            (rise,fall,mrise,mfall,0) O = A1.

****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2) tristatebuf(O,DATA,EN)

capacitor(ic1) cap1(DATA);
capacitor(ic2) cap2(EN);
capacitor(oc1) cap3(O);

BUFIF1 (rise,fall,mrise,mfall,0) G1(O,DATA,EN);           
                                        
** WIRE DECLARATIONS

INPUT           DATA EN;
TRI             O.

****}
****{ 

CCT     (rise,fall,mrise,mfall,oc1,ic1) delaycell(O,A1)

capacitor(ic1) cap1(A1);
capacitor(oc1) cap2(O);

INPUT   A1;
WIRE(rise,fall,mrise,mfall,0)     O = A1.

****}
****{


**DESCRIPTION:  D-TYPE REGISTER WITH PRESET AND CLEAR -- DFBF311 (1480)

*******************************************************************
**		Latches on clock's hi -> lo transition.		 **
**		Preset and clear are low asserted inputs.	 **
*******************************************************************

**PROGRAMMER :  R. Pepe
**DATE       :  22-Oct-89

**FILE       :  DFBF311_F.CCT

**********************************************************************
**								    **
**	This is a functional model which contains no cell timing    **
**     information.						    **
**								    **
**********************************************************************

**VERSION    :  1.1 - 12/27/89

**********************************************************************
** Version 1.1 - Corrected the LOADCASE statement which defines SET/**
**              RESET operation.  -- R. Pepe - 12/27/89		    **
**********************************************************************

****{
	
CCT (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2,ic3,ic4) dffsetreset (Q,QB,DATA,CLK2,RST3,SET4)

capacitor(ic1) cap1(DATA);
capacitor(ic2) cap2(CLK2);
capacitor(ic3) cap3(RST3);
capacitor(ic4) cap4(SET4);
capacitor(oc1) cap5(Q);
capacitor(oc2) cap6(QB);

REGISTER(r1,f1,mr1,mf1,0) Q = LOADCASE {SET4,RST3},
	           0? = 1,
		   10 = 0,
		   X0 = X
		  ENDCASE;
REGISTER(r2,f2,mr2,mf2,0) QB = LOADCASE {RST3,SET4},
		    0? = 1,
		    10 = 0,
		    X0 = X
		   ENDCASE;

INPUT           DATA CLK2 RST3 SET4;

WHEN CLK2(?:X TO 0) DO
	CASE {SET4,RST3},
	 11 - Q = DATA
	      QB = NOT DATA
	ENDCASE;
.

****}

        
****{ 

CCT     (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2) dff(Q,QB,DATA1,CLK2)

capacitor(ic1) cap1(DATA1);
capacitor(ic2) cap2(CLK2);
capacitor(oc1) cap3(Q);
capacitor(oc2) cap4(QB);

REGISTER(r1,f1,mr1,mf1,0) Q = DATA1 LOADIF0 CLK2;

INPUT   DATA1 CLK2;
WIRE    (r2,f2,mr2,mf2,0) QB = NOT Q.

****}
****{

CCT     (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3) dffasycreset(Q,DATA1,CLK2,RST3)


capacitor(ic1) cap1(DATA1);
capacitor(ic2) cap2(CLK2);
capacitor(ic3) cap3(RST3);
capacitor(oc1) cap4(Q);

REGISTER(rise,fall,mrise,mfall,0) Q = 0 LOADIF0 RST3;

INPUT   DATA1 CLK2 RST3;

WHEN CLK2(?:X TO 0) DO
        Q = DATA1;
.

****}
****{

CCT  (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2,ic3) fulladder(SUM,COUT,A1,B1,CIN2)     
                        
capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(CIN2);
capacitor(oc1) cap4(SUM);
capacitor(oc2) cap5(COUT);

** WIRE DECLARATIONS

INPUT   A1 B1 CIN2;

WIRE    (r2,f2,mr2,mf2,0) COUT = (CIN2 AND ((NOT A1 AND B1) OR (A1 AND NOT B1)) OR (A1 AND B1));

WIRE    (r1,f2,mr1,mf1,0) SUM = (NOT A1 AND ((NOT B1 AND CIN2) OR (B1 AND NOT CIN2))) OR
              (A1 AND ((NOT B1 AND NOT CIN2) OR (B1 AND CIN2)));
.
        


****}
****{

CCT     (rise,fall,mrise,mfall,oc1,ic1) himpinv(O,A1)

capacitor(ic1) cap1(A1);
capacitor(oc1) cap2(O);

INPUT   A1;
WIRE    (rise,fall,mrise,mfall,0) O = NOT A1.

****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1) inv (O,A)

capacitor(ic1) cap1(A);
capacitor(oc1) cap2(O);

** WIRE DECLARATIONS

INPUT           A;
WIRE            (rise,fall,mrise,mfall,0) O = NOT A.

****}
****{

CCT     (rise,fall,mrise,mfall,oc1,ic1) fourxinvbuf(A1,O)

capacitor(ic1) cap1(A1);
capacitor(oc1) cap2(O);

INPUT   A1;
WIRE    (rise,fall,mrise,mfall,0) O = NOT A1.

****}
****{

CCT (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2) twoinvert (O1,O2,A1,B1)

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(oc1) cap3(O1);
capacitor(oc2) cap4(O2);

** WIRE DECLARATIONS

INPUT           A1 B1;
WIRE            (r1,f1,mr1,mf1,0) O1 = NOT A1 ;
WIRE            (r2,f2,mr2,mf2,0) O2 = NOT B1.

****}
****{

CCT      (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2) crosscoupnandlatch (Q,QB,RST1,SET2)     
                                        
capacitor(ic1) cap1(RST1);
capacitor(ic2) cap2(SET2);
capacitor(oc1) cap3(Q);
capacitor(oc2) cap4(QB);

REGISTER(r1,f1,mr1,mf1,0) Q = LOADCASE {RST1,SET2},
                              ?0 = 1,
                              01 = 0,
                              0X = X
                             ENDCASE;
REGISTER(r2,f2,mr2,mf2,0) QB = LOADCASE {RST1,SET2},
                               0? = 1,
                               10 = 0,
                               X0 = X
                              ENDCASE; 
                   
** WIRE DECLARATIONS

INPUT   RST1 SET2;
.
****}
****{

CCT     (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2,ic3) dffreset(Q,QB,DATA1,CLK2,RST3)

capacitor(ic1) cap1(DATA1);
capacitor(ic2) cap2(CLK2);
capacitor(ic3) cap3(RST3);
capacitor(oc1) cap4(Q);
capacitor(oc2) cap5(QB);

REGISTER(r1,f1,mr1,mf1,0) Q = 0 LOADIF0 RST3;

INPUT   DATA1 CLK2 RST3;
WIRE    (r2,f2,mr2,mf2,0) QB = NOT Q;

WHEN CLK2(?:X TO 0) DO Q = DATA1.

****}
****{

CCT      (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2) crosscoupnorlatch (Q,QB,RST1,SET2)     
                                        
capacitor(ic1) cap1(RST1);
capacitor(ic2) cap2(SET2);
capacitor(oc1) cap3(Q);
capacitor(oc2) cap4(QB);

REGISTER(r1,f1,mr1,mf1,0) Q = LOADCASE {RST1,SET2},
                              1? = 0,
                              01 = 1,
                              X1 = X
                             ENDCASE;
REGISTER(r2,f2,mr2,mf2,0) QB = LOADCASE {RST1,SET2},
                               ?1 = 0,
                               10 = 1,
                               1X = X
                              ENDCASE;

** WIRE DECLARATIONS

INPUT   RST1 SET2;
.
****}
****{

CCT     (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2,ic3) clocklatch(Q,QB,DATA1,CLK2,RST3)

capacitor(ic1) cap1(DATA1);
capacitor(ic2) cap2(CLK2);
capacitor(ic3) cap3(RST3);
capacitor(oc1) cap4(Q);
capacitor(oc2) cap5(QB);

REGISTER(r1,f1,mr1,mf1,0) Q = LOADCASE {RST3,CLK2},
                              0? = 0,
                              10 = DATA1
                             ENDCASE;

INPUT   DATA1 CLK2 RST3;
WIRE    (r2,f2,mr2,mf2,0) QB = NOT Q;
.
****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3) twoinpmux(O,A1,B2,SEL3)

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B2);
capacitor(ic3) cap3(SEL3);
capacitor(oc1) cap4(O);

** WIRE DECLARATIONS

INPUT   A1 B2 SEL3;
WIRE    (rise,fall,mrise,mfall,0) O = VALCASE SEL3,
                                     1 = A1,
                                     0 = B2,
                                     X = A1 SAME B2
                                    ENDCASE.

****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2) nand2 (O,A1,B1)        
                        

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(oc1) cap3(O);

** WIRE DECLARATIONS

INPUT           A1 B1;
WIRE            (rise,fall,mrise,mfall,0) O = A1 NAND B1.

****}
****{

CCT (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2) and2nand2(O1,O2,A1,B1) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(oc1) cap3(O1);
capacitor(oc2) cap4(O2);

** WIRE DECLARATIONS

INPUT   A1 B1;

WIRE    (r1,f1,mr1,mf1,0) O1 = A1 NAND B1;
WIRE    (r2,f2,mr2,mf2,0) O2 = NOT O1
.
****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2) nimp (O,A1,B2)        
                        
capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B2);
capacitor(oc1) cap3(O);

** WIRE DECLARATIONS

INPUT           A1 B2;
WIRE    (rise,fall,mrise,mfall,0) O = A1 OR NOT B2.

****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3) nand3 (O,A1,B1,C1)             
                                        
capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C1);
capacitor(oc1) cap4(O);

** WIRE DECLARATIONS

INPUT           A1 B1 C1;
WIRE            (rise,fall,mrise,mfall,0) O = NAND(A1,B1,C1).

****}
****{

CCT (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2,ic3) and3nand3(O1,O2,A1,B1,C1) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C1);
capacitor(oc1) cap4(O1);
capacitor(oc2) cap5(O2);

** WIRE DECLARATIONS

INPUT   A1 B1 C1;

WIRE    (r1,f1,mr1,mf1,0) O1 = NAND(A1,B1,C1);
WIRE    (r2,f2,mr2,mf2,0) O2 = NOT O1
.
****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3,ic4) nand4 (O,A1,B1,C1,D1) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C1);
capacitor(ic4) cap4(D1);
capacitor(oc1) cap5(O);

** WIRE DECLARATIONS

INPUT           A1 B1 C1 D1;
WIRE            (rise,fall,mrise,mfall,0) O = NAND(A1,B1,C1,D1).

****}
****{

CCT (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2,ic3,ic4) and4nand4(O1,O2,A1,B1,C1,D1) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C1);
capacitor(ic4) cap4(D1);
capacitor(oc1) cap5(O1);
capacitor(oc2) cap6(O2);

** WIRE DECLARATIONS

INPUT   A1 B1 C1 D1;

WIRE    (r1,f1,mr1,mf1,0) O1 = NAND(A1,B1,C1,D1);
WIRE    (r2,f2,mr2,mf2,0) O2 = NOT O1;
.
****}
****{

CCT (rise,fall,mrise,mfall,oc1,ic1,ic2) nor2 (O,A1,B1)

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(oc1) cap3(O);

** WIRE DECLARATIONS

INPUT           A1 B1;
WIRE            (rise,fall,mrise,mfall,0) O = A1 NOR B1.

****}
****{

CCT (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2) or2nor2(O1,O2,A1,B1) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(oc1) cap3(O1);
capacitor(oc2) cap4(O2);

** WIRE DECLARATIONS

INPUT   A1 B1;

WIRE    (r1,f1,mr1,mf1,0) O1 = NOT O2;
WIRE    (r2,f2,mr2,mf2,0) O2 = A1 NOR B1;
.
****}
****{

CCT (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2) NORF211F(O1,O2,A1,B1) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(oc1) cap3(O1);
capacitor(oc2) cap4(O2);

** WIRE DECLARATIONS

INPUT   A1 B1;

WIRE    (r1,f1,mr1,mf1,0) O1 = NOT O2;
WIRE    (r2,f2,mr2,mf2,0) O2 = A1 NOR B1;
.
****}
****{

CCT (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2) NORF211F(O1,O2,A1,B1) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(oc1) cap3(O1);
capacitor(oc2) cap4(O2);

** WIRE DECLARATIONS

INPUT   A1 B1;

WIRE    (r1,f1,mr1,mf1,0) O1 = NOT O2;
WIRE    (r2,f2,mr2,mf2,0) O2 = A1 NOR B1;
.
****}
****{

CCT (rise,fall,mrise,mfall,oc1,ic1,ic2) imp (O,A1,B2)

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B2);
capacitor(oc1) cap3(O);

** WIRE DECLARATIONS

INPUT           A1 B2;
WIRE    (rise,fall,mrise,mfall,0) O = NOT A1 AND B2.

****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3) nor3 (O,A1,B1,C1)
                                        
capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C1);
capacitor(oc1) cap4(O);

** WIRE DECLARATIONS

INPUT           A1 B1 C1;
WIRE            (rise,fall,mrise,mfall,0) O = NOR(A1,B1,C1).

****}
****{

CCT (r1,f1,mr1,mf1,oc1,r2,f2,mr2,mf2,oc2,ic1,ic2,ic3) or3nor3(O1,O2,A1,B1,C1) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C1);
capacitor(oc1) cap4(O1);
capacitor(oc2) cap5(O2);

** WIRE DECLARATIONS

INPUT   A1 B1 C1;

WIRE    (r1,f1,mr1,mf1,0) O1 = NOT O2;
WIRE    (r2,f2,mr2,mf2,0) O2 = NOR(A1,B1,C1)
.
****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3,ic4) nor4(O,A1,B1,C1,D1)   
                                
capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C1);
capacitor(ic4) cap4(D1);
capacitor(oc1) cap5(O);

** WIRE DECLARATIONS

INPUT           A1 B1 C1 D1;
WIRE            (rise,fall,mrise,mfall,0) O = NOR(A1,B1,C1,D1).

****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3,ic4) or4(O,A1,B1,C1,D1)   
                                
capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C1);
capacitor(ic4) cap4(D1);
capacitor(oc1) cap5(O);

** WIRE DECLARATIONS

INPUT           A1 B1 C1 D1;
WIRE            (rise,fall,mrise,mfall,0) O = OR(A1,B1,C1,D1).

****}
****{

CCT (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3,ic4) oai22(O,A1,B1,C2,D2) 

capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C2);
capacitor(ic4) cap4(D2);
capacitor(oc1) cap5(O);

** WIRE DECLARATIONS

INPUT   A1 B1 C2 D2;

WIRE    (rise,fall,mrise,mfall,0) O = (A1 OR B1) NAND (C2 OR D2)
.
****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2,ic3,ic4) ORF401F (O,A1,B1,C1,D1)           
capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(ic3) cap3(C1);
capacitor(ic4) cap4(D1);
capacitor(oc1) cap5(O);

** WIRE DECLARATIONS

INPUT           A1 B1 C1 D1;
WIRE            (rise,fall,mrise,mfall,0) O = OR(A1,B1,C1,D1).

****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2) nxor2 (O,A1,B1)        
                        
capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(oc1) cap3(O);

** WIRE DECLARATIONS

INPUT   A1 B1;
WIRE    (rise,fall,mrise,mfall,0) O = A1 NXOR B1.

****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2) xor2 (O,A1,B1)        
                        
capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(oc1) cap3(O);

** WIRE DECLARATIONS

INPUT   A1 B1;
WIRE    (rise,fall,mrise,mfall,0) O = A1 XOR B1.

****}

****{

CCT     (rise,fall,mrise,mfall,oc1,ic1) threexinvbuf(A1,O)

capacitor(ic1) cap1(A1);
capacitor(oc1) cap2(O);

INPUT   A1;
WIRE    (rise,fall,mrise,mfall,0) O = NOT A1.

****}
****{
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2) statnxor2 (O,A1,B1)        
                        
capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(oc1) cap3(O);

** WIRE DECLARATIONS

INPUT   A1 B1;
WIRE    (rise,fall,mrise,mfall,0) O = A1 NXOR B1.

****}
****{

CCT  (rise,fall,mrise,mfall,oc1,ic1,ic2) statxor2 (O,A1,B1)        
                        
capacitor(ic1) cap1(A1);
capacitor(ic2) cap2(B1);
capacitor(oc1) cap3(O);

** WIRE DECLARATIONS

INPUT   A1 B1;
WIRE    (rise,fall,mrise,mfall,0) O = A1 XOR B1.

****}
****{
cct (r,f,mr,mf,oc,ic1,ic2) transgate (out,data,ctrl)
capacitor(ic1) c1(data);
capacitor(ic2) c2(ctrl);
capacitor(oc) c3(out);
tranif1 (r,f,mr,mf,0) g1(out,data,ctrl);
wire out;
input data,ctrl;
.
****}

